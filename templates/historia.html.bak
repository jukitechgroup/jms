<head>
<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="NO-CACHE">
<META HTTP-EQUIV="PRAGMA" CONTENT="NO-CACHE">
<defs>
  <clipPath id="clip">
    <rect width="600" height="270"></rect>
  </clipPath>
</defs>
<link rel="stylesheet" type="text/css" href="style.css">
<script src="d3-queue.v3.min.js"></script>
<script src="d3.legend.js"></script>



<link rel="stylesheet" type="text/css" media="all" href="jsDatePick_ltr.min.css" />
<script type="text/javascript" src="jsDatePick.min.1.3.js"></script>
<script type="text/javascript"> window.onload = function(){new JsDatePick({useMode:2,target:"inputField1", dateFormat:"%Y-%m-%d"}); new JsDatePick({useMode:2,target:"inputField2", dateFormat:"%Y-%m-%d"});};</script>

<body>
<div id="history_select_menu">
<meta charset="utf-8">

<form action ="../index.php?sivu=history" method="post">
		Select Graph : <select id="csvselect" name="csvselect">
				<option value="CSV1">Sensor 1</option>
				<option value="CSV2">Sensor 2</option>
				<option value="CSV3">Sensor 3</option>
				<option value="CSV4">Sensor 4</option>
				<option value="CSV5">Sensor 5</option>
				<option value="CSV6">Sensor 6</option>
				<option value="CSV7">Sensor 7</option>
				<option value="CSV8">Sensor 8</option>
			</select>
			<select id="csvselect2" name="csvselect2">
				<option value="CSV1">Sensor 1</option>
				<option value="CSV2">Sensor 2</option>
				<option value="CSV3">Sensor 3</option>
				<option value="CSV4">Sensor 4</option>
				<option value="CSV5">Sensor 5</option>
				<option value="CSV6">Sensor 6</option>
				<option value="CSV7">Sensor 7</option>
				<option value="CSV8">Sensor 8</option>
			</select>
			<select id="csvselect3" name="csvselect3">
				<option value="CSV1">Sensor 1</option>
				<option value="CSV2">Sensor 2</option>
				<option value="CSV3">Sensor 3</option>
				<option value="CSV4">Sensor 4</option>
				<option value="CSV5">Sensor 5</option>
				<option value="CSV6">Sensor 6</option>
				<option value="CSV7">Sensor 7</option>
				<option value="CSV8">Sensor 8</option>
			</select>
		Start Date : <input type="text" size="10" id="inputField1" name="input1" />
		Stop Date :  <input type="text" size="10" id="inputField2" name="input2"/>
		<input type="submit" name="submit" value="Submit Query">
</form>

</div>

<div id="php1">

<?php
if (isset($_POST['submit'])){
//$src = $_POST['csvselect'];
$zeroTime = "-00-00-00";
$startdate = $_POST['input1'];
$stopdate = $_POST['input2'];
//$db = new PDO('sqlite:/var/www/html/data/database_all.db');
$db = new PDO('sqlite:/var/www/html/data/measure.db'); 	//yhdistetään tietokantaan
$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); 
if(!$db){
      echo $db->lastErrorMsg();
   } else {
      echo "Database opened successfully..\n <br>";
   }
   
function csv1() {  
global $db;
global $startdate;
global $stopdate; 
$fp = fopen('/var/www/html/data/data.csv', 'w'); 	//avataan csv tiedosto -> tulos muuttujaan $fp
$csv_headers=array();
$csv_headers[] = 'date';
$csv_headers[] = 'value';
//$src = $db->prepare("SELECT aika,temp FROM measure1 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
if ($_POST['csvselect'] === 'CSV1') {
		$src = $db->prepare("SELECT aika,value FROM measure1 WHERE strftime('%Y-%m-%d %H:%M:%S', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor1 <br>";
		}
	elseif ($_POST['csvselect'] === 'CSV2') {
		$src = $db->prepare("SELECT aika,value FROM measure2 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo 'Selected Graph : Sensor2 <br>';
		}			
	elseif ($_POST['csvselect'] === 'CSV3') {
		$src = $db->prepare("SELECT aika,value FROM measure3 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor3 <br>";
		}
	elseif ($_POST['csvselect'] === 'CSV4') {
		$src = $db->prepare("SELECT aika,value FROM measure4 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor4 <br>";
		}
	elseif ($_POST['csvselect'] === 'CSV5') {
		$src = $db->prepare("SELECT aika,value FROM measure5 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor5 <br>";
		}
	elseif ($_POST['csvselect'] === 'CSV6') {
		$src = $db->prepare("SELECT aika,value FROM measure6 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor6 <br>";
		}
	elseif ($_POST['csvselect'] === 'CSV7') {
		$src = $db->prepare("SELECT aika,value FROM measure7 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor7 <br>";
		}
	elseif ($_POST['csvselect'] === 'CSV8') {
		$src = $db->prepare("SELECT aika,value FROM measure8 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor8 <br>";
		}
$src->bindParam(':aika1', $startdate, PDO::PARAM_STR );
$src->bindParam(':aika2', $stopdate, PDO::PARAM_STR );
$src->execute();
fputcsv($fp, $csv_headers);
//echo "Data received from : <b> $startdate </b>  to : <b> $stopdate </b>";
while ($row = $src->fetch(PDO::FETCH_ASSOC)) {	//Valitaan rivit hausta
	fputcsv($fp, $row);
	//var_dump($row);
    //echo '<pre>'; print_r($row); echo '</pre>';	
}
fclose($fp); //suljetaan csv tiedosto
return;
}		
function csv2() {
global $db;
global $startdate;
global $stopdate; 		
$fp1 = fopen('/var/www/html/data/data1.csv', 'w'); 	//avataan csv tiedosto -> tulos muuttujaan $fp
$csv_headers1=array();
$csv_headers1[] = 'date';
$csv_headers1[] = 'value';
if ($_POST['csvselect2'] === 'CSV1') {
		$src = $db->prepare("SELECT aika,value FROM measure1 WHERE strftime('%Y-%m-%d %H:%M:%S', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor1 <br>";
		}
	elseif ($_POST['csvselect2'] === 'CSV2') {
		$src = $db->prepare("SELECT aika,value FROM measure2 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo 'Selected Graph : Sensor2 <br>';
		}			
	elseif ($_POST['csvselect2'] === 'CSV3') {
		$src = $db->prepare("SELECT aika,value FROM measure3 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor3 <br>";
		}
	elseif ($_POST['csvselect2'] === 'CSV4') {
		$src = $db->prepare("SELECT aika,value FROM measure4 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor4 <br>";
		}
	elseif ($_POST['csvselect2'] === 'CSV5') {
		$src = $db->prepare("SELECT aika,value FROM measure5 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor5 <br>";
		}
	elseif ($_POST['csvselect2'] === 'CSV6') {
		$src = $db->prepare("SELECT aika,value FROM measure6 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor6 <br>";
		}
	elseif ($_POST['csvselect2'] === 'CSV7') {
		$src = $db->prepare("SELECT aika,value FROM measure7 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor7 <br>";
		}
	elseif ($_POST['csvselect2'] === 'CSV8') {
		$src = $db->prepare("SELECT aika,value FROM measure8 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor8 <br>";
		}
$src->bindParam(':aika1', $startdate, PDO::PARAM_STR );
$src->bindParam(':aika2', $stopdate, PDO::PARAM_STR );
$src->execute();
fputcsv($fp1, $csv_headers1);
//echo "Data received from : <b> $startdate </b>  to : <b> $stopdate </b>";
while ($row = $src->fetch(PDO::FETCH_ASSOC)) {	//Valitaan rivit hausta
	fputcsv($fp1, $row);
	//var_dump($row);
    //echo '<pre>'; print_r($row); echo '</pre>';	
}
fclose($fp1); //suljetaan csv tiedosto
return;
}				
function csv3() {
global $db;
global $startdate;
global $stopdate; 		
$fp2 = fopen('/var/www/html/data/data2.csv', 'w'); 	//avataan csv tiedosto -> tulos muuttujaan $fp
$csv_headers2=array();
$csv_headers2[] = 'date';
$csv_headers2[] = 'value';
if ($_POST['csvselect3'] === 'CSV1') {
		$src = $db->prepare("SELECT aika,value FROM measure1 WHERE strftime('%Y-%m-%d %H:%M:%S', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor1 <br>";
		}
	elseif ($_POST['csvselect3'] === 'CSV2') {
		$src = $db->prepare("SELECT aika,value FROM measure2 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo 'Selected Graph : Sensor2 <br>';
		}			
	elseif ($_POST['csvselect3'] === 'CSV3') {
		$src = $db->prepare("SELECT aika,value FROM measure3 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor3 <br>";
		}
	elseif ($_POST['csvselect3'] === 'CSV4') {
		$src = $db->prepare("SELECT aika,value FROM measure4 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor4 <br>";
		}
	elseif ($_POST['csvselect3'] === 'CSV5') {
		$src = $db->prepare("SELECT aika,value FROM measure5 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor5 <br>";
		}
	elseif ($_POST['csvselect3'] === 'CSV6') {
		$src = $db->prepare("SELECT aika,value FROM measure6 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor6 <br>";
		}
	elseif ($_POST['csvselect3'] === 'CSV7') {
		$src = $db->prepare("SELECT aika,value FROM measure7 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor7 <br>";
		}
	elseif ($_POST['csvselect3'] === 'CSV8') {
		$src = $db->prepare("SELECT aika,value FROM measure8 WHERE strftime('%Y-%m-%d', aika) BETWEEN :aika1 AND :aika2 ");
		echo "Selected Graph : Sensor8 <br>";
		}
$src->bindParam(':aika1', $startdate, PDO::PARAM_STR );
$src->bindParam(':aika2', $stopdate, PDO::PARAM_STR );
$src->execute();
fputcsv($fp2, $csv_headers2);
echo "Data received from : <b> $startdate </b>  to : <b> $stopdate </b>";
while ($row = $src->fetch(PDO::FETCH_ASSOC)) {	//Valitaan rivit hausta
	fputcsv($fp2, $row);
	//var_dump($row);
    //echo '<pre>'; print_r($row); echo '</pre>';	
}
fclose($fp2); //suljetaan csv tiedosto
return;
}		
}
csv1();
csv2();
csv3();
?>
<button onclick="window.location.href='../data/data.csv'">Download CSV1</button>
<button onclick="window.location.href='../data/data1.csv'">Download CSV2</button>
<button onclick="window.location.href='../data/data2.csv'">Download CSV3</button>
<?php
  $count = count(file('/var/www/html/data/data.csv'));
  $count1 = count(file('/var/www/html/data/data1.csv'));
  $count2 = count(file('/var/www/html/data/data2.csv'));
  echo "Values in CSV1 : <b> $count </b>";
  echo "Values in CSV2 : <b> $count1 </b>";
  echo "Values in CSV3 : <b> $count2 </b>";
?>//
</div>


<div id="history1"></div>
<script>
History();

function History() {

var margin = {top: 30, right: 20, bottom: 100, left: 70},
    width = 800 - margin.left - margin.right,
    height = 400 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y-%m-%d %X").parse,
	formatDate = d3.time.format("%m-%d %X"),
	bisectDate = d3.bisector(function(d) { return d.date; }).left,
	formatValue = d3.format(",.2f");
	
	
d3.queue()
.defer(d3.csv, "../data/data.csv")
.defer(d3.csv, "../data/data1.csv")
.defer(d3.csv, "../data/data2.csv")
.await(function(error, data, data1, data2) {
    if (error) {
        console.error('Oho, meni pieleen: ' + error);
    }
    else {
    data.forEach(function(d) {
        d.date = parseDate(d.date);
        d.value = +d.value;
    	});
    data1.forEach(function(d) {
        d.date = parseDate(d.date);
        d.value = +d.value;
    	});
    data2.forEach(function(d) {
        d.date = parseDate(d.date);
        d.value = +d.value;
    	});

var xMax = d3.max(data, function(d) { return d.date; });	
var xMin = d3.min(data, function(d) { return d.date; });

var x = d3.time.scale()
	.range([0, width]);
	
	
var y = d3.scale.linear()
	.range([height, 0]);
	
var y1 = d3.scale.linear()
	.range([height, 0]);
	
var y2 = d3.scale.linear()
	.range([height, 0]);



var xAxis = d3.svg.axis()
	.scale(x)
    .orient("bottom")
    .tickFormat(d3.time.format("%d-%m-%Y %H:%M:%S"))
    //.tickValues([xMin, xMax])
    .ticks(12)
   	//.ticks(d3.time.hour, 1)
   	.innerTickSize(-height)
    .outerTickSize(0)
    .tickPadding(5);
    

var yAxis = d3.svg.axis()
	.scale(y)
    .orient("left")
    .ticks(15)
    .innerTickSize(-width)
    .outerTickSize(0)
    .tickPadding(5);
    
var y1Axis = d3.svg.axis()
	.scale(y1)
    .orient("right")
    .ticks(15)
    .innerTickSize(-width)
    .outerTickSize(0)
    .tickPadding(5);
    
var y2Axis = d3.svg.axis()
	.scale(y2)
    .orient("left")
    .ticks(15)
    .innerTickSize(-width)
    .outerTickSize(0)
    .tickPadding(5);
    
var valueline = d3.svg.line()
	.interpolate("linear")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.value); });
    
var valueline1 = d3.svg.line()
	.interpolate("linear")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.value); });
    
var valueline2 = d3.svg.line()
	.interpolate("linear")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.value); });
    
var div = d3.select("history1").append("div")	
    .attr("class", "tooltip")				
    .style("opacity", 0);
    
    x.domain(d3.extent(data, function(d) { return d.date; }));
    y.domain([0, d3.max(data, function(d) { return d.value; })]);
    y1.domain([0, d3.max(data1, function(d) { return d.value; })]);
  //  y2.domain([0, d3.max(data2, function(d) { return d.value; })]);
    
var zoom = d3.behavior.zoom()
    .x(x)
    .y(y)
    .scaleExtent([1, 50])
    .on("zoom", zoomed);
    
//var lineSvg = svg.append("g");

var svg = d3.select("#history1")
    .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
    .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
        .call(zoom);



svg.append("rect")
        .attr("width", width)
        .attr("height", height)
        .attr("class", "plot")
        .style("fill", "none");
       
var clip = svg.append("clipPath")
    .attr("id", "clip")
    .append("rect")
    .attr("x", 0)
    .attr("y", 0)
    .attr("width", width)
    .attr("height", height);
    
console.log(d3.extent(data, function(d) { return d.date; }));

var chartBody = svg.append("g")
    .attr("clip-path", "url(#clip)");
    
        chartBody.append("path")
        .datum(data)
        .attr("class", "line")
        .attr("data-legend", "CSV1")
 		//.attr("data-legend-icon": "line")
        .attr("d", valueline(data));
        
        chartBody.append("path")
        .datum(data1)
        .attr("class", "line1")
        .attr("data-legend", "CSV2")
 		//.attr("data-legend-icon": "line")
        .attr("d", valueline1(data1));
        
        chartBody.append("path")
        .datum(data2)
        .attr("class", "line2")
        .attr("data-legend", "CSV3")
 		//.attr("data-legend-icon": "line")
        .attr("d", valueline2(data2));

	legend = svg.append("g")
    	.attr("class","legend")
    	.attr("transform","translate(20,10)")
    	.style("font-size","10px")
    	.call(d3.legend);

        svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis)
        	.selectAll("text")
    	.attr("y", 0)
    	.attr("x", 9)
    	.attr("dy", ".35em")
    	.attr("transform", "rotate(45)")
    	.style("text-anchor", "start")
    	.style("color", "red");

        svg.append("g")
        .attr("class", "y axis")
        .call(yAxis);
        
        svg.append("g")
        .attr("class", "y axis")
        .attr("transform", "translate(" + width + " ,0)")   
        .call(y1Axis);
 
 svg.append("rect")
      .attr("class", "overlay")
      .attr("width", width)
      .attr("height", height)
      .on("mouseover", function() { focus.style("display", null); })
      .on("mouseout", function() { focus.style("display", "none"); })
      .on("mousemove", mousemove);
 
 	var focus = svg.append("g") 
	var focus1 = svg.append("g") 
	var focus2 = svg.append("g")       	
      
      focus.append("rect")
      .style("fill", "white")
  	  .style("stroke", "black")
  	  .style("fill-opacity", .9) 	  
      .attr("width", 90)
      .attr("height", 20)
      .attr("x", 20)
      .attr("y", -35);
     
      focus1.append("rect")
      .style("fill", "white")
      .style("stroke", "black")
      .style("fill-opacity", .9)
      .attr("width", 90)
      .attr("height", 20)
      .attr("x", 20)
      .attr("y", 10);
      
      focus2.append("rect")
      .style("fill", "white")
      .style("stroke", "black")
      .style("fill-opacity", .9)
      .attr("width", 90)
      .attr("height", 20)
      .attr("x", 20)
      .attr("y", 10);
     
   	 focus.append("circle")
      	.attr("r", 4.5);
      	
      	focus1.append("circle")
      	.attr("r", 4.5);
      	
      	focus2.append("circle")
      	.attr("r", 4.5);

  		focus.append("text")
      	.attr("x", 20)
      	.attr("dy", "-2.35em")
      	.style("stroke", "blue");
      	
      	focus1.append("text")
      	.attr("x", 20)
      	.attr("dy", "2.35em")
      	.style("stroke", "green");
      	
      	focus2.append("text")
      	.attr("x", 20)
      	.attr("dy", "2.35em")
      	.style("stroke", "purple");   
      						
  function mousemove() {
    var x0 = x.invert(d3.mouse(this)[0]),
        i = bisectDate(data, x0, 1),
        d0 = data[i - 1],
        d1 = data[i],
        d = x0 - d0.date > d1.date - x0 ? d1 : d0;
        console.log(x0)
    focus.attr("transform", "translate(" + x(d.date) + "," + y(d.value) + ")");
    focus.select("text")
      	.text(d.value + ", " + formatDate(d.date))
    	 .append("rect")   ;
    	
  
    var x1 = x.invert(d3.mouse(this)[0]),
        i = bisectDate(data1, x0, 1),
        d0 = data1[i - 1],
        d1 = data1[i],
        d = x0 - d0.date > d1.date - x0 ? d1 : d0;
        console.log(x1)
    focus1.attr("transform", "translate(" + x(d.date) + "," + y(d.value) + ")");
    focus1.select("text")
    	.text(d.value + ", " + formatDate(d.date))
    	.append("rect");
    	
    	
    var x2 = x.invert(d3.mouse(this)[0]),
        i = bisectDate(data2, x0, 1),
        d0 = data2[i - 1],
        d1 = data2[i],
        d = x0 - d0.date > d1.date - x0 ? d1 : d0;
        console.log(x2)
    focus2.attr("transform", "translate(" + x(d.date) + "," + y(d.value) + ")");
    focus2.select("text")
    	.text(d.value + ", " + formatDate(d.date))
    	.append("rect");
    
  }


}     
        function zoomed() {
  svg.select(".x.axis")
  		.call(xAxis)
  		.selectAll("text")
    	.attr("y", 0)
    	.attr("x", 9)
    	.attr("dy", ".35em")
    	.attr("transform", "rotate(45)")
    	.style("color", "red")
    	.style("text-anchor", "start");

  svg.selectAll(".y.axis").call(yAxis);
  //svg.select(".y.axis").call(y1Axis);
  chartBody.select("path.line").attr("d", valueline);
  chartBody.select("path.line1").attr("d", valueline1);
  chartBody.select("path.line2").attr("d", valueline2);



}
});
}

</script>
</body>